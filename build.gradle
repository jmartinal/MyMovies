// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext {
        kotlin_version = '1.3.61'
        okhttp_version = '3.14.1'
        retrofit_version = '2.6.2'
        coroutines_version = '1.1.1'
        glide_version = '4.10.0'
        play_services_version = '17.0.0'
        room_version = '2.2.3'
        dexter_version = '6.0.1'
        koin_version = '2.0.1'
    }
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }

    ext {
        androidLibs = [
                appcompat          : 'androidx.appcompat:appcompat:1.1.0',
                androidxCore       : 'androidx.core:core-ktx:1.2.0',
                constraintLayout   : 'androidx.constraintlayout:constraintlayout:1.1.3',
                recyclerView       : 'androidx.recyclerview:recyclerview:1.1.0',
                material           : 'com.google.android.material:material:1.0.0',
                playServices       : "com.google.android.gms:play-services-location:$play_services_version",
                lifecycleExtensions: 'android.arch.lifecycle:extensions:1.1.1',
                dexter             : "com.karumi:dexter:$dexter_version",
                glide              : "com.github.bumptech.glide:glide:$glide_version",
                roomRuntime        : "androidx.room:room-runtime:$room_version",
                roomKtx            : "androidx.room:room-ktx:$room_version"
        ]

        androidKaptLibs = [
                roomCompiler : "androidx.room:room-compiler:$room_version",
                glideCompiler: "com.github.bumptech.glide:compiler:$glide_version"
        ]

        kotlinLibs = [
                stdLib           : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
                coroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version",
                coroutinesCore   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
        ]

        libs = [
                okhttp                  : "com.squareup.okhttp3:okhttp:$okhttp_version",
                okhttpLoggingInterceptor: "com.squareup.okhttp3:logging-interceptor:$okhttp_version",
                retrofit                : "com.squareup.retrofit2:retrofit:$retrofit_version",
                retrofitGsonConverter   : "com.squareup.retrofit2:converter-gson:$retrofit_version",
                coroutinesAdapter       : "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2",
                koin                    : "org.koin:koin-android-viewmodel:$koin_version"
        ]

        testLibs = [
                junit         : 'junit:junit:4.12',
                mockitoKotlin : "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0",
                mockitoInline : "org.mockito:mockito-inline:2.28.2",
                espresso     : 'androidx.test.espresso:espresso-contrib:3.2.0',
                rules        : 'androidx.test:rules:1.2.0',
                extJunit     : 'androidx.test.ext:junit-ktx:1.1.1',
                mockWebServer: 'com.squareup.okhttp3:mockwebserver:4.2.1',
                okhttpIdling : 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0',
                koin          : "org.koin:koin-test:$koin_version",
                testShared    : project(':testShared')
        ]

        androidxTestLibs = [
                archCoreTesting: 'android.arch.core:core-testing:1.1.1'
        ]

        androidTestLibs = [
                testRunner: 'androidx.test:runner:1.2.0',
                espresso  : 'androidx.test.espresso:espresso-core:3.2.0'
        ]
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
